/**
 * @file P2241 统计方形（数据加强版）.cpp
 * @date 2022-06-07
 */

/*
# 统计方形（数据加强版）

## 题目背景

1997年普及组第一题

## 题目描述

有一个 $n \times m$ 方格的棋盘，求其方格包含多少正方形、长方形（不包含正方形）。

## 输入格式

一行，两个正整数 $n,m$（$n \leq 5000,m \leq 5000$）。

## 输出格式

一行，两个正整数，分别表示方格包含多少正方形、长方形（不包含正方形）。

## 样例 #1

### 样例输入 #1

```
2 3
```

### 样例输出 #1

```
8 10
```
*/

/*
矩形数目 = 正方形数目 + 长方形数目

长方形数目不太好求，选择求正方形数目和矩形数目，之后用后者减去前者得到长方形数目

矩形数目：考虑 1*5 的矩形，其中所有的小矩形为 (1) * (1 + 2 + 3 + 4 + 5)，
高度为1，而有5个长为1的矩形，4个长为2的矩形...等等，将长扩展到n，也即有
(1) * (1 + 2 + 3 + 4 + 5 + ... + n)

现在考虑向下加一行，则上述的每行的矩形应该要计算两遍，此外还有一个高为2的长条，
不妨将高为2的部分看作高为1，则计算方法一样，只不过在具体写式子的时候1要换为2，
即
(1) * (1 + 2 + 3 + 4 + 5 + ... + n) + (1) * (1 + 2 + 3 + 4 + 5 + ... + n) + (2) * (1 + 2 + 3 + 4 + 5 + ... + n)
也就是
2 * (1) * (1 + 2 + 3 + 4 + 5 + ... + n) + (2) * (1 + 2 + 3 + 4 + 5 + ... + n)

向下再加一行，则有三行，对于每一行有一个计算，每两行有一个计算，每三行有一个计算，即
3 * (1) * (1 + 2 + 3 + 4 + 5 + ... + n) + 2 * (2) * (1 + 2 + 3 + 4 + 5 + ... + n) + (3) * (1 + 2 + 3 + 4 + 5 + ... + n)

发现规律，从m行中逐个抽出1行，2行，3行...直到m行，个数分别为m个，m-1个，m-2个...1个，
此外提出公因式，即有
(1 + 2 + 3 + ... + m) * (1 + 2 + 3 + ... + n)

这就是所有的矩形数目

至于正方形，是矩形数目的特殊情况，当两个边长相等的时候才有，
当边长为1的时候，有 n*m，当边长为2的时候有 (n-1)*(m-1)，...，
到最后就是1*min(n,m)，即
n * m + (n - 1) * (m - 1) + ... + 1 * (min(n, m))

二者相减，即为长方形数目
*/

#include <cstdio>

int main() {

    unsigned long long n = 0, m = 0;
    scanf("%llu %llu", &n, &m);

    unsigned long long rect = n * (n + 1) / 2 * m * (m + 1) / 2;
    unsigned long long squ = 0;
    for (unsigned long long i = n, j = m; i >= 1 && j >= 1; i--, j--) // 时间复杂度 O(min(n, m))
        squ += i * j;

    printf("%llu %llu", squ, rect - squ);

    return 0;
}