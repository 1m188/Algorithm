/**
 * @file P2670 [NOIP2015 普及组] 扫雷游戏.cpp
 * @date 2022-05-30
 */

/*
# [NOIP2015 普及组] 扫雷游戏

## 题目背景

NOIP2015 普及组 T2

## 题目描述

扫雷游戏是一款十分经典的单机小游戏。在$n$行$m$列的雷区中有一些格子含有地雷（称之为地雷格），其他格子不含地雷（称之为非地雷格）。玩家翻开一个非地雷格时，该格将会出现一个数字——提示周围格子中有多少个是地雷格。游戏的目标是在不翻出任何地雷格的条件下，找出所有的非地雷格。

现在给出$n$行$m$列的雷区中的地雷分布，要求计算出每个非地雷格周围的地雷格数。

注：一个格子的周围格子包括其上、下、左、右、左上、右上、左下、右下八个方向上与之直接相邻的格子。

## 输入格式

第一行是用一个空格隔开的两个整数$n$和$m$，分别表示雷区的行数和列数。

接下来$n$行，每行$m$个字符，描述了雷区中的地雷分布情况。字符’\*’表示相应格子是地雷格，字符’?’表示相应格子是非地雷格。相邻字符之间无分隔符。

## 输出格式

输出文件包含$n$行，每行$m$个字符，描述整个雷区。用’\*’表示地雷格，用周围的地雷个数表示非地雷格。相邻字符之间无分隔符。

## 样例 #1

### 样例输入 #1

```
3 3
*??
???
?*?
```

### 样例输出 #1

```
*10
221
1*1
```

## 样例 #2

### 样例输入 #2

```
2 3
?*?
*??
```

### 样例输出 #2

```
2*1
*21
```

## 提示

对于 $100\%$的数据， $1≤n≤100, 1≤m≤100$。
*/

#include <iostream>
#include <vector>
using namespace std;

vector<vector<int>> vec;

int main() {

    int n = 0, m = 0;
    cin >> n >> m;
    vec.resize(n, vector<int>(m));

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            char c;
            cin >> c;
            if (c == '*') vec[i][j] = -1;
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (vec[i][j] == -1) continue;

            int num = 0;
            for (int x = i - 1; x <= i + 1; x++) {
                for (int y = j - 1; y <= j + 1; y++) {
                    if ((x != i || y != j) && x >= 0 && x < n && y >= 0 && y < m && vec[x][y] == -1)
                        num++;
                }
            }

            vec[i][j] = num;
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (vec[i][j] != -1)
                cout << vec[i][j];
            else
                cout << '*';
        }
        cout << '\n';
    }

    return 0;
}