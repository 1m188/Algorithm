/*
　　问题描述
编写一个程序，读入一组整数，这组整数是按照从小到大的顺序排列的，它们的个数N也是由用户输入的，最多不会超过20。
然后程序将对这个数组进行统计，把出现次数最多的那个数组元素值打印出来。如果有两个元素值出现的次数相同，即并列第一，那么只打印比较小的那个值。

　　输入格式：第一行是一个整数N，N £ 20；接下来有N行，每一行表示一个整数，并且按照从小到大的顺序排列。
　　输出格式：输出只有一行，即出现次数最多的那个元素值。

输入输出样例
样例输入
5
100
150
150
200
250
样例输出
150
*/

#include "iostream"

int main()
{
    int N = 0;
    std::cin >> N;

    //这里要注意，所谓的 由用户输入 指的是可能会有出错的情况，因此需要进行判断
    if (N > 0 && N < 20)
    {
        //由于数据是从小到大排列好的输入，那么可以记录每种数据的出现次数依次比较大小，而数据是由小到大排列好的，那么就不存在后面的数据的次数和前面的数据的次数
        //一样的时候需要判定更小的数据的情况了
        int t = 0, count = 0, num = 0, maxCount = 0;
        for (int i = 0; i < N; i++)
        {
            int n = 0;
            std::cin >> n;

            if (n == t)
            {
                count++;
            }
            else
            {
                if (count > maxCount)
                {
                    num = t;
                    maxCount = count;
                }
                t = n;
                count = 1;
            }
        }
        if (count > maxCount)
        {
            num = t;
            maxCount = count;
        }

        std::cout << num;
    }

    return 0;
}