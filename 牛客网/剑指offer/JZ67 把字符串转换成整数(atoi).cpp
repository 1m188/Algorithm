/**
 * @file JZ67 把字符串转换成整数(atoi).cpp
 * @date 2022-05-27
 */

/*
描述
写一个函数 StrToInt，实现把字符串转换成整数这个功能。不能使用 atoi 或者其他类似的库函数。传入的字符串可能有以下部分组成:
1.若干空格
2.（可选）一个符号字符（'+' 或 '-'）
3. 数字，字母，符号，空格组成的字符串表达式
4. 若干空格

转换算法如下:
1.去掉无用的前导空格
2.第一个非空字符为+或者-号时，作为该整数的正负号，如果没有符号，默认为正数
3.判断整数的有效部分：
3.1 确定符号位之后，与之后面尽可能多的连续数字组合起来成为有效整数数字，如果没有有效的整数部分，那么直接返回0
3.2 将字符串前面的整数部分取出，后面可能会存在存在多余的字符(字母，符号，空格等)，这些字符可以被忽略，它们对于函数不应该造成影响
3.3  整数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231的整数应该被调整为 −231 ，大于 231 − 1 的整数应该被调整为 231 − 1
4.去掉无用的后导空格


数据范围:
1.0 <=字符串长度<= 100
2.字符串由英文字母（大写和小写）、数字（0-9）、' '、'+'、'-' 和 '.' 组成


示例1
输入：
"82"
复制
返回值：
82
复制
示例2
输入：
"   -12  "
复制
返回值：
-12
复制
说明：
去掉前后的空格，为-12  
示例3
输入：
"4396 clearlove"
复制
返回值：
4396
复制
说明：
6后面的字符不属于有效的整数部分，去除，但是返回前面提取的有效部分  
示例4
输入：
"clearlove 4396"
复制
返回值：
0
复制
示例5
输入：
"-987654321111"
复制
返回值：
-2147483648
*/

#include <cctype>
#include <climits>
#include <string>
using namespace std;

class Solution {
  public:
    /**
     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可
     *
     * 
     * @param s string字符串 
     * @return int整型
     */
    int StrToInt(string s) {
        // write code here

        // 空字符串
        if (s.empty())
            return 0;

        // 去掉头部空格
        while (s[0] == ' ')
            s.erase(s.begin());

        // 符号
        int sign = 1;
        if (s[0] == '-') {
            sign = -1;
            s.erase(s.begin());
        } else if (s[0] == '+')
            s.erase(s.begin());

        // 有效整数部分
        if (!isdigit(s[0]))
            return 0;

        // 用 longlong 是为了避免溢出，方便和上下限值比较
        long long ans = (s[0] - '0') * sign;

        for (int i = 1; i < s.size() && isdigit(s[i]); i++) {
            ans = ans * 10 + sign * (s[i] - '0');
            if (sign == 1 && ans > INT_MAX) // 注意超出范围的特殊情况
                return INT_MAX;
            else if (sign == -1 && ans < INT_MIN)
                return INT_MIN;
        }

        return ans;
    }
};