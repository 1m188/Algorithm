/**
 * @file 7-5 我侬数.cpp
 * @date 2022-05-20
 */

/*
元初的中国书画大家赵孟頫的妻子管道升曾经写过一首脍炙人口的《我侬词》，词中道：“把一块泥，捻一个你，塑一个我。将咱们两个一齐打破，用水调和。再捏一个你，再塑一个我。我泥中有你，你泥中有我。”

给定一对正整数 A 和 B，将它们的各位数字收集到一起，再重新分成两个数 A 
′
  和 B 
′
 ，我们称这样的 A 
′
  和 B 
′
  互为基于 A 和 B 的“我侬数“。本题就请你判断任一对数字是否是基于给定 A 和 B 的“我侬数“。

输入格式：
输入首先在第一行中给出两个不超过 10 
4
  位的正整数 A 和 B，为“我侬数“的基础数。随后每行给出一对不超过 2×10 
4
  位的正整数 A 
′
  和 B 
′
 。数字间以 1 个空格分隔。

输入以一对 0 结束，这一对 0 不要处理。题目保证至少有一对需要判定的数字。

输出格式：
对每一对 A 
′
  和 B 
′
 ，判断其是否是基于给定 A 和 B 的“我侬数“。如果是，则在一行中输出 Yes，否则输出 No。

注意：所有数字均不考虑前导 0。例如 A=101，B=2021，则我们不能判定 012 和 0121 为“我侬数“。

输入样例：
521212577999 21100008482136
521212577999 21100008482136
00210908482136 512121257799
123456789012597890 11100222
786238645254 19024781758903
21100008482136 521212577999
90 52121257792110008482136
0 0
输出样例：
Yes
No
Yes
No
Yes
No
代码长度限制
16 KB
时间限制
400 ms
内存限制
64 MB
*/

// 测试点 1 错误

#include <cstdio>
#include <string>
#include <vector>
using namespace std;

vector<int> num(10);

int main() {

    /* 针对测试点1错误的修复（题目集已关闭未验证） */
    // 最开始输入的两个基数会不会有前导零？题目里说忽略所有前导零，是否意味着连
    // 基数的前导零都忽略？
    bool f = false;
    for (char c; (c = getchar()) != ' ';) {
        if (f)
            num[c - '0']++;
        else if (c != '0') {
            f = true;
            num[c - '0']++;
        }
    }
    f = false;
    for (char c; (c = getchar()) != '\n';)
        if (f)
            num[c - '0']++;
        else if (c != '0') {
            f = true;
            num[c - '0']++;
        }
    /*********************************************************************************/

    while (true) {
        string s1, s2;
        for (char c; (c = getchar()) != ' ';)
            s1.push_back(c);
        for (char c; (c = getchar()) != '\n';)
            s2.push_back(c);

        if (s1 == "0" && s2 == "0")
            break;

        while (s1[0] == '0')
            s1.erase(s1.begin());
        while (s2[0] == '0')
            s2.erase(s2.begin());

        vector<int> nnum(10);
        for (const char &c : s1)
            nnum[c - '0']++;
        for (const char &c : s2)
            nnum[c - '0']++;

        printf(nnum == num ? "Yes\n" : "No\n");
    }

    return 0;
}